function pretty-ls {
    $folderEmoji = [char]::ConvertFromUtf32(0x1F4C1)  # üìÅ
    $fileEmoji   = [char]::ConvertFromUtf32(0x1F4C4)  # üìÑ
    $maxNameLength = 40

    Write-Host ""  # Top padding

    # Header
    $headerFormat = "{0,-10} {1,-45} {2,10}   {3}"
    Write-Host ($headerFormat -f "Type", "Name", "Size", "Modified") -ForegroundColor White
    Write-Host ("-" * 80)

    Get-ChildItem | ForEach-Object {
        $item = $_
        $name = if ($item.Name.Length -gt $maxNameLength) {
            $item.Name.Substring(0, $maxNameLength - 1) + "‚Ä¶"
        } else {
            $item.Name
        }

        $date = $item.LastWriteTime.ToString("yyyy-MM-dd HH:mm")
        $size = if (!$item.PSIsContainer) {
            "{0,6:N1} KB" -f ($item.Length / 1KB)
        } else {
            "<DIR>"
        }

        $typeLabel = if ($item.PSIsContainer) {
            "$folderEmoji Folder"
        } else {
            "$fileEmoji " + ($item.Extension -replace '^\.', '').ToUpper()
        }

        $color = if ($item.PSIsContainer) {
            'Cyan'
        } else {
            switch -Regex ($item.Extension) {
                '\.ps1'           { 'Green' }
                '\.txt'           { 'Yellow' }
                '\.md'            { 'Magenta' }
                '\.(jpg|png|gif)' { 'Blue' }
                '\.(exe|bat)'     { 'Red' }
                default           { 'Gray' }
            }
        }

        $lineFormat = "{0,-10} {1,-45} {2,10}   {3}"
        Write-Host ($lineFormat -f $typeLabel, $name, $size, $date) -ForegroundColor $color
    }

    Write-Host ""  # Bottom padding
}

Set-Alias pls pretty-ls
 
